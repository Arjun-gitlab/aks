name: CI-CD Pipeline
 
on:
  push:
    branches:
      - main
 
env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  TF_BACKEND_RG: ${{ secrets.TF_BACKEND_RG }}
  TF_BACKEND_STORAGE_ACCOUNT: ${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}
  TF_BACKEND_CONTAINER: ${{ secrets.TF_BACKEND_CONTAINER }}
  AKS_RG: ${{ secrets.AKS_RG }}
  AKS_CLUSTER: ${{ secrets.AKS_CLUSTER }}
 
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Login to ACR
        run: az acr login --name ${{ env.ACR_NAME }}
 
      - name: Build patient image
        run: |
          echo "ðŸ”Ž Using ACR: ${{ env.ACR_NAME }}"
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/patient-service:latest ./microservices/patient-service
 
      - name: Push patient image
        run: docker push ${{ env.ACR_NAME }}.azurecr.io/patient-service:latest
 
      - name: Build appointment image
        run: |
          echo "ðŸ”Ž Using ACR: ${{ env.ACR_NAME }}"
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/appointment-service:latest ./microservices/appointment-service
 
      - name: Push appointment image
        run: docker push ${{ env.ACR_NAME }}.azurecr.io/appointment-service:latest
 
  name: Deploy Terraform
 
on:
  push:
    branches:
      - main
  workflow_dispatch:
 
jobs:
  terraform:
    runs-on: ubuntu-latest
 
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
 
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6   # or whichever version you use
 
      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=YOUR_BACKEND_RG" \
                            -backend-config="storage_account_name=YOUR_STORAGE_ACCOUNT" \
                            -backend-config="container_name=YOUR_CONTAINER" \
                            -backend-config="key=terraform.tfstate"
 
      - name: Terraform Validate
        run: terraform validate
 
      - name: Terraform Plan
        run: terraform plan -out=tfplan
 
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
 
  deploy-aks:
    needs: deploy-terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.AKS_RG }} \
            --name ${{ env.AKS_CLUSTER }} \
            --overwrite-existing
 
      - name: Deploy patient service
        run: kubectl apply -f k8s/patient-deployment.yaml
 
      - name: Deploy appointment service
        run: kubectl apply -f k8s/appointment-deployment.yaml
