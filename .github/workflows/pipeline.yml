on:
  push:
    branches: [ main ]
  workflow_dispatch:
 
env:
  TF_BACKEND_RG: ${{ secrets.TF_BACKEND_RG }}
  TF_BACKEND_STORAGE_ACCOUNT: ${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}
  TF_BACKEND_CONTAINER: ${{ secrets.TF_BACKEND_CONTAINER }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  AKS_RG: ${{ secrets.AKS_RG }}
  AKS_NAME: ${{ secrets.AKS_NAME }}
  DOMAIN: ${{ secrets.DOMAIN }}
 
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Build patient image
        run: |
          docker build -t $ACR_NAME.azurecr.io/patient-service:latest ./microservices/patient-service
          echo "Built patient image"
 
      - name: Build appointment image
        run: |
          docker build -t $ACR_NAME.azurecr.io/appointment-service:latest ./microservices/appointment-service
          echo "Built appointment image"
 
      - name: Login to ACR
        run: az acr login --name $ACR_NAME
 
      - name: Push patient image
        run: docker push $ACR_NAME.azurecr.io/patient-service:latest
 
      - name: Push appointment image
        run: docker push $ACR_NAME.azurecr.io/appointment-service:latest
 
  deploy-terraform:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Set env TF backend vars
        run: |
          echo "TF_VAR_backend_rg=${{ env.TF_BACKEND_RG }}" >> $GITHUB_ENV
          echo "TF_VAR_backend_storage_account=${{ env.TF_BACKEND_STORAGE_ACCOUNT }}" >> $GITHUB_ENV
          echo "TF_VAR_backend_container=${{ env.TF_BACKEND_CONTAINER }}" >> $GITHUB_ENV
 
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Terraform Init & Apply (dev)
        working-directory: terraform/envs/dev
        run: |
          terraform init -backend-config="resource_group_name=${{ env.TF_BACKEND_RG }}" \
                         -backend-config="storage_account_name=${{ env.TF_BACKEND_STORAGE_ACCOUNT }}" \
                         -backend-config="container_name=${{ env.TF_BACKEND_CONTAINER }}" \
                         -backend-config="key=dev.terraform.tfstate"
          terraform apply -auto-approve
 
  deploy-k8s:
    needs: deploy-terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $AKS_RG --name $AKS_NAME --overwrite-existing
 
      - name: Replace ACR placeholder in manifests
        run: |
          ACR=${{ env.ACR_NAME }}.azurecr.io
          sed -i "s|<ACR_LOGIN_SERVER>|${ACR}|g" k8s/*.yaml
          sed -i "s|<YOUR_DOMAIN>|${{ env.DOMAIN }}|g" k8s/*.yaml
 
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/